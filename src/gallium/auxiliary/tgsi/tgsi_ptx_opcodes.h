//OPCODE(num_dst, num_src, output_mode, name, supported?, dst_type, is_tex)
OPCODE(1, 1, COMP, ARL, 0, "", 0)
OPCODE(1, 1, COMP, mov, 1, .f32, 0)
OPCODE(1, 1, CHAN, LIT, 0, "", 0)
//OPCODE(1, 1, REPL, RCP, 0, "", 0)
OPCODE(1, 1, REPL, rcp, 1, .approx.f32, 0)
//OPCODE(1, 1, REPL, RSQ, 0, "", 0)
OPCODE(1, 2, REPL, rsqrt, 1, .approx.f32, 0)
OPCODE(1, 1, CHAN, EXP, 0, "", 0)
OPCODE(1, 1, CHAN, LOG, 0, "", 0)
OPCODE(1, 2, COMP, mul, 1, .f32, 0)
OPCODE(1, 2, COMP, add, 1, .f32, 0)
//OPCODE(1, 2, REPL, dp2, 1, .f32, 0)
OPCODE(1, 2, REPL, dp3, 1, .f32, 0)
OPCODE(1, 2, REPL, DP4, 0, "", 0)
OPCODE(1, 2, CHAN, DST, 0, "", 0)
OPCODE(1, 2, COMP, MIN, 0, "", 0)
OPCODE(1, 2, COMP, max, 1, .f32, 0)
OPCODE(1, 2, COMP, SLT, 0, "", 0)
OPCODE(1, 2, COMP, SGE, 0, "", 0)
OPCODE(1, 3, COMP, mad, 1, .f32, 0)
OPCODE(1, 2, OTHR, TEX_LZ, 0, "", /*.is_tex =*/ 1)
OPCODE(1, 3, COMP, lrp, 1, .f32, 0)
OPCODE(1, 3, COMP, fma, 1, .f32, 0)
OPCODE(1, 1, REPL, sqrt, 1, .approx.f32, 0)
OPCODE_GAP(21) /* removed */
OPCODE(1, 1, COMP, F2U64, 0, "", 0)
OPCODE(1, 1, COMP, F2I64, 0, "", 0)
OPCODE(1, 1, COMP, FRC, 0, "", 0)
OPCODE(1, 2, OTHR, TXF_LZ, 0, "", /*.is_tex =*/ 1)
OPCODE(1, 1, COMP, FLR, 0, "", 0)
OPCODE(1, 1, COMP, ROUND, 0, "", 0)
OPCODE(1, 1, REPL, EX2, 0, "", 0)
OPCODE(1, 1, REPL, LG2, 0, "", 0)
//OPCODE(1, 2, REPL, POW, 0, "", 0)
OPCODE(1, 1, REPL, pow, 1, .approx.f32, 0)
OPCODE_GAP(31) /* removed */
OPCODE(1, 1, COMP, U2I64, 0, "", 0)
OPCODE(1, 0, OTHR, CLOCK, 0, "", 0)
OPCODE(1, 1, COMP, I2I64, 0, "", 0)
OPCODE_GAP(35) /* removed */
OPCODE(1, 1, REPL, COS, 0, "", 0)
OPCODE(1, 1, COMP, DDX, 0, "", 0)
OPCODE(1, 1, COMP, DDY, 0, "", 0)
OPCODE(0, 0, NONE, exit, 1, , 0)
OPCODE(1, 1, REPL, PK2H, 0, "", 0)
OPCODE(1, 1, REPL, PK2US, 0, "", 0)
OPCODE(1, 1, REPL, PK4B, 0, "", 0)
OPCODE(1, 1, REPL, PK4UB, 0, "", 0)
OPCODE(1, 1, COMP, D2U64, 0, "", 0)
OPCODE(1, 2, COMP, SEQ, 0, "", 0)
OPCODE(1, 1, COMP, D2I64, 0, "", 0)
OPCODE(1, 2, COMP, SGT, 0, "", 0)
OPCODE(1, 1, REPL, SIN, 0, "", 0)
OPCODE(1, 2, COMP, SLE, 0, "", 0)
OPCODE(1, 2, COMP, SNE, 0, "", 0)
OPCODE(1, 1, COMP, U642D, 0, "", 0)
OPCODE(1, 2, OTHR, tex,  1, , /*.is_tex = */ 1)
OPCODE(1, 4, OTHR, TXD,  0, "", /*.is_tex =*/ 1)
OPCODE(1, 2, OTHR, TXP,  0, "", /*.is_tex =*/ 1)
OPCODE(1, 1, CHAN, UP2H, 0, "", 0)
OPCODE(1, 1, CHAN, UP2US, 0, "", 0)
OPCODE(1, 1, CHAN, UP4B, 0, "", 0)
OPCODE(1, 1, CHAN, UP4UB, 0, "", 0)
OPCODE(1, 1, COMP, U642F, 0, "", 0)
OPCODE(1, 1, COMP, I642F, 0, "", 0)
OPCODE(1, 1, COMP, ARR, 0, "", 0)
OPCODE(1, 1, COMP, I642D, 0, "", 0)
OPCODE(0, 0, NONE, CAL,  0, "", 0, .is_branch = 1)
OPCODE(0, 0, NONE, RET, 0, "", 0)
OPCODE(1, 1, COMP, SSG, 0, "", 0)
OPCODE(1, 3, COMP, CMP, 0, "", 0)
OPCODE_GAP(67) /* removed */
OPCODE(1, 2, OTHR, txb,  1, , /*.is_tex =*/ 1)
OPCODE(1, 1, OTHR, FBFETCH, 0, "", 0)
OPCODE(1, 2, COMP, DIV, 0, "", 0)
OPCODE(1, 2, REPL, dp2, 1, .f32, 0)
OPCODE(1, 2, OTHR, TXL,  0, "", /*.is_tex =*/ 1)
OPCODE(0, 0, NONE, BRK, 0, "", 0)
OPCODE(0, 1, NONE, IF, 0, "", 0, .is_branch = 1, .post_indent = 1)
OPCODE(0, 1, NONE, UIF,  0, "", 0, .is_branch = 1, .post_indent = 1)
OPCODE(1, 2, COMP, READ_INVOC, 0, "", 0)
OPCODE(0, 0, NONE, ELSE,0, "", 0, .is_branch = 1, .pre_dedent = 1, .post_indent = 1)
OPCODE(0, 0, NONE, ENDIF, 0, "", 0, .pre_dedent = 1)
OPCODE(1, 1, COMP, DDX_FINE, 0, "", 0)
OPCODE(1, 1, COMP, DDY_FINE, 0, "", 0)
OPCODE_GAP(81) /* removed */
OPCODE_GAP(82) /* removed */
OPCODE(1, 1, COMP, CEIL, 0, "", 0)
OPCODE(1, 1, COMP, I2F, 0, "", 0)
OPCODE(1, 1, COMP, NOT, 0, "", 0)
OPCODE(1, 1, COMP, TRUNC, 0, "", 0)
OPCODE(1, 2, COMP, SHL, 0, "", 0)
OPCODE(1, 1, OTHR, BALLOT, 0, "", 0)
OPCODE(1, 2, COMP, AND, 0, "", 0)
OPCODE(1, 2, COMP, OR, 0, "", 0)
OPCODE(1, 2, COMP, MOD, 0, "", 0)
OPCODE(1, 2, COMP, XOR, 0, "", 0)
OPCODE_GAP(93) /* removed */
//OPCODE(1, 2, OTHR, txf,  1, , /*.is_tex =*/ 1)
OPCODE(1, 2, OTHR, tex,  1, , /*.is_tex =*/ 1) //FIXME
OPCODE(1, 2, OTHR, TXQ,  0, "", /*.is_tex =*/ 1)
OPCODE(0, 0, NONE, CONT, 0, "", 0)
OPCODE(0, 1, NONE, EMIT, 0, "", 0)
OPCODE(0, 1, NONE, ENDPRIM, 0, "", 0)
OPCODE(0, 0, NONE, BGNLOOP,  0, "", 0, .is_branch = 1, .post_indent = 1)
OPCODE(0, 0, NONE, BGNSUB, 0, "", 0, .post_indent = 1)
OPCODE(0, 0, NONE, ENDLOOP, 0, "", 0, .is_branch = 1, .pre_dedent = 1)
OPCODE(0, 0, NONE, ENDSUB, 0, "", 0, .pre_dedent = 1)
OPCODE_GAP(103) /* removed */
OPCODE(1, 1, OTHR, TXQS, 0, "", /*.is_tex =*/ 1)
OPCODE(1, 1, OTHR, RESQ, 0, "", 0)
OPCODE(1, 1, COMP, READ_FIRST, 0, "", 0)
OPCODE(0, 0, NONE, NOP, 0, "", 0)
OPCODE(1, 2, COMP, FSEQ, 0, "", 0)
OPCODE(1, 2, COMP, FSGE, 0, "", 0)
OPCODE(1, 2, COMP, FSLT, 0, "", 0)
OPCODE(1, 2, COMP, FSNE, 0, "", 0)
OPCODE(0, 1, OTHR, MEMBAR, 0, "", 0)
OPCODE_GAP(113) /* removed */
OPCODE_GAP(114) /* removed */
OPCODE_GAP(115) /* removed */
OPCODE(0, 1, NONE, KILL_IF, 0, "", 0)
OPCODE(0, 0, NONE, exit, 1, , 0)
OPCODE(1, 3, COMP, DFMA, 0, "", 0)
OPCODE(1, 1, COMP, cvt, 1, .rz.s32.f32, 0)
OPCODE(1, 2, COMP, IDIV, 0, "", 0)
OPCODE(1, 2, COMP, max, 1, .s32, 0)
OPCODE(1, 2, COMP, IMIN, 0, "", 0)
OPCODE(1, 1, COMP, INEG, 0, "", 0)
OPCODE(1, 2, COMP, ISGE, 0, "", 0)
OPCODE(1, 2, COMP, ISHR, 0, "", 0)
OPCODE(1, 2, COMP, ISLT, 0, "", 0)
OPCODE(1, 1, COMP, F2U, 0, "", 0)
OPCODE(1, 1, COMP, U2F, 0, "", 0)
OPCODE(1, 2, COMP, UADD, 0, "", 0)
OPCODE(1, 2, COMP, UDIV, 0, "", 0)
OPCODE(1, 3, COMP, UMAD, 0, "", 0)
OPCODE(1, 2, COMP, max, 1, .u32, 0)
OPCODE(1, 2, COMP, min, 0, .u32, 0)
OPCODE(1, 2, COMP, UMOD, 0, "", 0)
OPCODE(1, 2, COMP, UMUL, 0, "", 0)
OPCODE(1, 2, COMP, USEQ, 0, "", 0)
OPCODE(1, 2, COMP, USGE, 0, "", 0)
OPCODE(1, 2, COMP, USHR, 0, "", 0)
OPCODE(1, 2, COMP, USLT, 0, "", 0)
OPCODE(1, 2, COMP, USNE, 0, "", 0)
OPCODE(0, 1, NONE, SWITCH, 0, "", 0)
OPCODE(0, 1, NONE, CASE, 0, "", 0)
OPCODE(0, 0, NONE, DEFAULT, 0, "", 0)
OPCODE(0, 0, NONE, ENDSWITCH, 0, "", 0)
OPCODE(1, 3, OTHR, SAMPLE, 0, "", 0)
OPCODE(1, 2, OTHR, SAMPLE_I, 0, "", 0)
OPCODE(1, 3, OTHR, SAMPLE_I_MS, 0, "", 0)
OPCODE(1, 4, OTHR, SAMPLE_B, 0, "", 0)
OPCODE(1, 4, OTHR, SAMPLE_C, 0, "", 0)
OPCODE(1, 4, OTHR, SAMPLE_C_LZ, 0, "", 0)
OPCODE(1, 5, OTHR, SAMPLE_D, 0, "", 0)
OPCODE(1, 4, OTHR, SAMPLE_L, 0, "", 0)
OPCODE(1, 3, OTHR, GATHER4, 0, "", 0)
OPCODE(1, 2, OTHR, SVIEWINFO, 0, "", 0)
OPCODE(1, 2, OTHR, SAMPLE_POS, 0, "", 0)
OPCODE(1, 2, OTHR, SAMPLE_INFO, 0, "", 0)
OPCODE(1, 1, COMP, UARL, 0, "", 0)
OPCODE(1, 3, COMP, UCMP, 0, "", 0)
OPCODE(1, 1, COMP, IABS, 0, "", 0)
OPCODE(1, 1, COMP, ISSG, 0, "", 0)
OPCODE(1, 2, OTHR, LOAD, 0, "", 0)
OPCODE(1, 2, OTHR, STORE,  0, "", 0, .is_store = 1)
OPCODE_GAP(163) /* removed */
OPCODE_GAP(164) /* removed */
OPCODE_GAP(165) /* removed */
OPCODE(0, 0, OTHR, BARRIER, 0, "", 0)
OPCODE(1, 3, OTHR, ATOMUADD, 0, "", 0, .is_store = 1)
OPCODE(1, 3, OTHR, ATOMXCHG, 0, "", 0, .is_store = 1)
OPCODE(1, 4, OTHR, ATOMCAS,  0, "", 0, .is_store = 1)
OPCODE(1, 3, OTHR, ATOMAND,  0, "", 0, .is_store = 1)
OPCODE(1, 3, OTHR, ATOMOR, 0, "", 0, .is_store = 1)
OPCODE(1, 3, OTHR, ATOMXOR,  0, "", 0, .is_store = 1)
OPCODE(1, 3, OTHR, ATOMUMIN, 0, "", 0, .is_store = 1)
OPCODE(1, 3, OTHR, ATOMUMAX, 0, "", 0, .is_store = 1)
OPCODE(1, 3, OTHR, ATOMIMIN, 0, "", 0, .is_store = 1)
OPCODE(1, 3, OTHR, ATOMIMAX, 0, "", 0, .is_store = 1)
OPCODE(1, 3, OTHR, TEX2, 0, "", /*.is_tex =*/ 1)
OPCODE(1, 3, OTHR, TXB2, 0, "", /*.is_tex =*/ 1)
OPCODE(1, 3, OTHR, TXL2, 0, "", /*.is_tex =*/ 1)
OPCODE(1, 2, COMP, IMUL_HI, 0, "", 0)
OPCODE(1, 2, COMP, UMUL_HI, 0, "", 0)
OPCODE(1, 3, OTHR, TG4,  0, "", /*.is_tex =*/ 1)
OPCODE(1, 2, OTHR, LODQ, 0, "", /*.is_tex =*/ 1)
OPCODE(1, 3, COMP, IBFE, 0, "", 0)
OPCODE(1, 3, COMP, UBFE, 0, "", 0)
OPCODE(1, 4, COMP, BFI, 0, "", 0)
OPCODE(1, 1, COMP, BREV, 0, "", 0)
OPCODE(1, 1, COMP, POPC, 0, "", 0)
OPCODE(1, 1, COMP, LSB, 0, "", 0)
OPCODE(1, 1, COMP, IMSB, 0, "", 0)
OPCODE(1, 1, COMP, UMSB, 0, "", 0)
OPCODE(1, 1, OTHR, INTERP_CENTROID, 0, "", 0)
OPCODE(1, 2, OTHR, INTERP_SAMPLE, 0, "", 0)
OPCODE(1, 2, OTHR, INTERP_OFFSET, 0, "", 0)
OPCODE(1, 1, COMP, F2D, 0, "", 0)
OPCODE(1, 1, COMP, D2F, 0, "", 0)
OPCODE(1, 1, COMP, DABS, 0, "", 0)
OPCODE(1, 1, COMP, DNEG, 0, "", 0)
OPCODE(1, 2, COMP, DADD, 0, "", 0)
OPCODE(1, 2, COMP, DMUL, 0, "", 0)
OPCODE(1, 2, COMP, DMAX, 0, "", 0)
OPCODE(1, 2, COMP, DMIN, 0, "", 0)
OPCODE(1, 2, COMP, DSLT, 0, "", 0)
OPCODE(1, 2, COMP, DSGE, 0, "", 0)
OPCODE(1, 2, COMP, DSEQ, 0, "", 0)
OPCODE(1, 2, COMP, DSNE, 0, "", 0)
OPCODE(1, 1, COMP, DRCP, 0, "", 0)
OPCODE(1, 1, COMP, DSQRT, 0, "", 0)
OPCODE(1, 3, COMP, DMAD, 0, "", 0)
OPCODE(1, 1, COMP, DFRAC, 0, "", 0)
OPCODE(1, 2, COMP, DLDEXP, 0, "", 0)
OPCODE(2, 1, COMP, DFRACEXP, 0, "", 0)
OPCODE(1, 1, COMP, D2I, 0, "", 0)
OPCODE(1, 1, COMP, I2D, 0, "", 0)
OPCODE(1, 1, COMP, D2U, 0, "", 0)
OPCODE(1, 1, COMP, U2D, 0, "", 0)
OPCODE(1, 1, COMP, DRSQ, 0, "", 0)
OPCODE(1, 1, COMP, DTRUNC, 0, "", 0)
OPCODE(1, 1, COMP, DCEIL, 0, "", 0)
OPCODE(1, 1, COMP, DFLR, 0, "", 0)
OPCODE(1, 1, COMP, DROUND, 0, "", 0)
OPCODE(1, 1, COMP, DSSG, 0, "", 0)
OPCODE(1, 1, COMP, VOTE_ANY, 0, "", 0)
OPCODE(1, 1, COMP, VOTE_ALL, 0, "", 0)
OPCODE(1, 1, COMP, VOTE_EQ, 0, "", 0)
OPCODE(1, 2, COMP, U64SEQ, 0, "", 0)
OPCODE(1, 2, COMP, U64SNE, 0, "", 0)
OPCODE(1, 2, COMP, I64SLT, 0, "", 0)
OPCODE(1, 2, COMP, U64SLT, 0, "", 0)
OPCODE(1, 2, COMP, I64SGE, 0, "", 0)
OPCODE(1, 2, COMP, U64SGE, 0, "", 0)
OPCODE(1, 2, COMP, I64MIN, 0, "", 0)
OPCODE(1, 2, COMP, U64MIN, 0, "", 0)
OPCODE(1, 2, COMP, I64MAX, 0, "", 0)
OPCODE(1, 2, COMP, U64MAX, 0, "", 0)
OPCODE(1, 1, COMP, I64ABS, 0, "", 0)
OPCODE(1, 1, COMP, I64SSG, 0, "", 0)
OPCODE(1, 1, COMP, I64NEG, 0, "", 0)
OPCODE(1, 2, COMP, U64ADD, 0, "", 0)
OPCODE(1, 2, COMP, U64MUL, 0, "", 0)
OPCODE(1, 2, COMP, U64SHL, 0, "", 0)
OPCODE(1, 2, COMP, I64SHR, 0, "", 0)
OPCODE(1, 2, COMP, U64SHR, 0, "", 0)
OPCODE(1, 2, COMP, I64DIV, 0, "", 0)
OPCODE(1, 2, COMP, U64DIV, 0, "", 0)
OPCODE(1, 2, COMP, I64MOD, 0, "", 0)
OPCODE(1, 2, COMP, U64MOD, 0, "", 0)
OPCODE(1, 2, COMP, DDIV, 0, "", 0)
